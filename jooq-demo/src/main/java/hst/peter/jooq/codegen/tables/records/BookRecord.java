/*
 * This file is generated by jOOQ.
 */
package hst.peter.jooq.codegen.tables.records;


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import hst.peter.jooq.codegen.tables.Book;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@JsonIgnoreProperties(value={"hibernateLazyInitializer","handler","fieldHandler"})
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements Record5<Long, Long, String, Long, Long>, Serializable {

    private static final long serialVersionUID = -794816521;

    /**
     * Setter for <code>demodb.book.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>demodb.book.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>demodb.book.author_id</code>.
     */
    public void setAuthorId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>demodb.book.author_id</code>.
     */
    public Long getAuthorId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>demodb.book.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>demodb.book.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>demodb.book.published_in</code>.
     */
    public void setPublishedIn(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>demodb.book.published_in</code>.
     */
    public Long getPublishedIn() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>demodb.book.language_id</code>.
     */
    public void setLanguageId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>demodb.book.language_id</code>.
     */
    public Long getLanguageId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, String, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Book.BOOK.ID;
    }

    @Override
    public Field<Long> field2() {
        return Book.BOOK.AUTHOR_ID;
    }

    @Override
    public Field<String> field3() {
        return Book.BOOK.TITLE;
    }

    @Override
    public Field<Long> field4() {
        return Book.BOOK.PUBLISHED_IN;
    }

    @Override
    public Field<Long> field5() {
        return Book.BOOK.LANGUAGE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAuthorId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public Long component4() {
        return getPublishedIn();
    }

    @Override
    public Long component5() {
        return getLanguageId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAuthorId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public Long value4() {
        return getPublishedIn();
    }

    @Override
    public Long value5() {
        return getLanguageId();
    }

    @Override
    public BookRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BookRecord value2(Long value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public BookRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BookRecord value4(Long value) {
        setPublishedIn(value);
        return this;
    }

    @Override
    public BookRecord value5(Long value) {
        setLanguageId(value);
        return this;
    }

    @Override
    public BookRecord values(Long value1, Long value2, String value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Long id, Long authorId, String title, Long publishedIn, Long languageId) {
        super(Book.BOOK);

        set(0, id);
        set(1, authorId);
        set(2, title);
        set(3, publishedIn);
        set(4, languageId);
    }
}
